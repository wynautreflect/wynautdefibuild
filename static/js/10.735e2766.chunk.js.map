{"version":3,"sources":["components/ExpandableSectionButton/ExpandableSectionButton.tsx","contexts/PastLotteryDataContext.tsx","hooks/useTimer.ts","utils/getTimePeriods.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["Wrapper","styled","div","theme","colors","primary","ExpandableSectionButton","onClick","expanded","aria-label","role","color","bold","defaultProps","React","createContext","mostRecentLotteryNumber","historyError","historyData","useCurrentTime","useState","Date","getTime","currentMillis","setCurrentMillis","useEffect","timerID","setInterval","prevMillis","clearInterval","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","parseInt","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getLotteryDrawStep","ProgressWrapper","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","isDark","secondary","LotteryProgress","TranslateString","useI18n","useGetLotteryHasDrawn","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","fontSize","style","marginTop","Title","Heading","attrs","as","size","Blurb","StyledHero","tertiary","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","textSubtle","StyledLoading","Loading","RewardP","TicketsList","props","StyledButton","Button","spacing","UserTicketsModal","myTicketNumbers","onDismiss","from","winNumbers","useWinningNumbers","rewardMatch","useCallback","number","n","i","length","listItems","map","index","emoji","Array","join","toString","title","TICKETS","variant","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","useTotalClaim","claimLoading","claimAmount","onMultiClaim","useMultiClaimLottery","tickets","useTickets","useModal","handleClaim","a","console","error","winnings","getBalanceNumber","toFixed","marginRight","fullWidth","disabled","TextWrapper","StyledText","Image","img","md","NoPrizesContent","onPresentMyTickets","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","MeowthTicket","UnlockButton","CardActions","TicketCard","allowance","useLotteryAllowance","lotteryHasDrawn","cakeBalance","useTokenBalance","getMeowthAddress","ticketsLength","PurchaseWarningModal","onPresentApprove","BuyTicketModal","max","tokenName","onPresentBuy","useApproval","handleApprove","requestedApproval","toNumber","id","isSecondCard","CardHeader","TicketCountWrapper","timeUntilTicketSale","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","oneTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","toLocaleString","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","account","useWallet","setShowFooter","useTotalRewards","lotteryPrizeWithCommaSeparators","currentLotteryNumber","useContext","PastLotteryDataContext","mb","alignItems","justifyContent","height","width","fontWeight","num","Link","Row","RabbitRow","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","WinningNumbers","MatchedNumber4","useMatchingRewardLength","MatchedNumber3","MatchedNumber2","responsive","marginLeft","href","target","LayoutWrapper","StyledImage","HowItWorks","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","lotteryNumber","fetch","response","json","data","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","value","type","isWarning","onChange","currentTarget","PastRoundCardError","p","message","LotteryCardHeading","valueToDisplay","children","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryDate","lotteryNumbers","match1Ticket","match2Ticket","match3Ticket","poolSize","MeowthCoin","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","PastLotteryRoundViewer","isInitialized","state","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","options","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Lottery","lotteryContract","useLottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","getLotteryIssueIndex","previousLotteryNumber","getInitialLotteryIndex","Page","Divider","Provider"],"mappings":"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","file":"static/js/10.735e2766.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"primary\" bold>\r\n        {expanded ? 'Hide' : 'Details'}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","import React from 'react'\r\n\r\nexport interface PastLotteryDataState {\r\n  mostRecentLotteryNumber: number\r\n  currentLotteryNumber: number\r\n  historyError: boolean\r\n  historyData: Array<any>\r\n}\r\n\r\nexport default React.createContext({\r\n  mostRecentLotteryNumber: 0,\r\n  historyError: false,\r\n  historyData: [],\r\n} as PastLotteryDataState)\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import getTimePeriods from 'utils/getTimePeriods'\r\n\r\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\r\nconst lotteryDrawHoursUtc = [7, 15]\r\n\r\nconst getClosestLotteryHour = (currentHour) => {\r\n  switch (true) {\r\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[0]\r\n    case currentHour < lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[1]\r\n    default:\r\n      return 0\r\n  }\r\n}\r\n\r\nconst getNextLotteryDrawTime = (currentMillis) => {\r\n  const date = new Date(currentMillis)\r\n  const currentHour = date.getUTCHours()\r\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\r\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\r\n  // ...and current time is between 02:00am & 23:59pm UTC\r\n  const nextLotteryIsTomorrow = nextLotteryHour === lotteryDrawHoursUtc[0] && currentHour >= 2 && currentHour <= 23\r\n  \r\n  let millisTimeOfNextDraw\r\n  if (nextLotteryIsTomorrow) {\r\n    const tomorrow = new Date(currentMillis)\r\n    const nextDay = tomorrow.getUTCDate() + 1\r\n    tomorrow.setUTCDate(nextDay)\r\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  } else {\r\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  }\r\n\r\n  return millisTimeOfNextDraw\r\n}\r\n\r\n// @ts-ignore\r\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\r\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\r\n\r\nexport const getTicketSaleTime = (currentMillis): string => {\r\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\r\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getLotteryDrawTime = (currentMillis): string => {\r\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getTicketSaleStep = () => (1 / 12) * 100\r\n\r\nexport const getLotteryDrawStep = (currentMillis) => {\r\n  const msBetweenLotteries = 43200000\r\n  const endTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = endTime - currentMillis\r\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\r\n  return 100 - percentageRemaining\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Progress } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport {\r\n  getLotteryDrawTime,\r\n  getLotteryDrawStep,\r\n  getTicketSaleTime,\r\n  getTicketSaleStep,\r\n} from '../helpers/CountdownHelpers'\r\n\r\nconst ProgressWrapper = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`\r\n\r\nconst TopTextWrapper = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst BottomTextWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledPrimaryText = styled(Text)`\r\n  color: ${({ theme }) => (theme.isDark ? theme.colors.secondary : '#202224')};\r\n  margin-right: 4px;\r\n`\r\nconst LotteryProgress = () => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\r\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\r\n\r\n  return (\r\n    <ProgressWrapper>\r\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} />\r\n      <TopTextWrapper>\r\n        <StyledPrimaryText fontSize=\"20px\" bold>\r\n         {/* {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw} */}\r\n         {TranslateString(0, '2 Meowth Lotteries per day!')}\r\n         {/* <br/ > */}\r\n         {/* {TranslateString(0, 'Winning tickets are drawn at:')}\r\n         <br/ >\r\n         {TranslateString(0, '0700 UTC and 1500 UTC')} */}\r\n        </StyledPrimaryText>\r\n        <Text fontSize=\"20px\" bold color=\"contrast\">\r\n        {/*  {lotteryHasDrawn ? TranslateString(0, 'Until ticket sale') : TranslateString(0, 'Until lottery draw')} */}\r\n        </Text>\r\n      </TopTextWrapper>\r\n      {/* {!lotteryHasDrawn && ( */}\r\n        <BottomTextWrapper style={{marginTop: 15}}>\r\n          <Text color=\"highlight\" bold style={{fontSize: 20}}>\r\n          {/* {TranslateString(0, 'Winning ticket is drawn 6 hours after sale starts')} */}\r\n          {timeUntilLotteryDraw} {TranslateString(0, 'until lottery draw ✨')}\r\n          </Text>\r\n        </BottomTextWrapper>\r\n      {/* )} */}\r\n    </ProgressWrapper>\r\n  )\r\n}\r\n\r\nexport default LotteryProgress\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Container from 'components/layout/Container'\r\nimport LotteryProgress from './LotteryProgress'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: ${({ theme }) => (theme.isDark ? theme.colors.primary : 'white')};\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Blurb = styled(Text)`\r\n  color: ${({ theme }) => (theme.isDark ? theme.colors.secondary : '#202224')};\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`\r\n\r\nconst StyledHero = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.tertiary};\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n`\r\n\r\nconst StyledContainer = styled(Container)`\r\n  display: flex;\r\n\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst LeftWrapper = styled.div`\r\n  flex: 1;\r\n  padding-right: 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst RightWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 1;\r\n  padding-left: 0;\r\n  margin-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 0;\r\n    padding-left: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst Hero = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <StyledContainer>\r\n        <LeftWrapper>\r\n          <Title>{TranslateString(708, 'The MEOWTH Lottery')}</Title>\r\n          <Blurb>{TranslateString(710, 'Buy tickets with MEOWTH')}</Blurb>\r\n          <Blurb>{TranslateString(712, 'Win if 2, 3 or 4 of your ticket numbers match!')}</Blurb>\r\n        </LeftWrapper>\r\n        <RightWrapper>\r\n          <LotteryProgress />\r\n        </RightWrapper>\r\n      </StyledContainer>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  background-color: ${({ theme }) => theme.colors.textSubtle};\r\n  height: 1px;\r\n  margin: 0 auto 32px;\r\n  width: 100%;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Loading: React.FC = () => <StyledLoading />\r\n\r\nconst StyledLoading = styled.div`\r\n  border: 8px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 8px solid #ddd;\r\n  border-bottom: 8px solid #ddd;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n  @-webkit-keyframes spin {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default Loading\r\n","import React, { useCallback } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { useWinningNumbers } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface UserTicketsModalProps {\r\n  myTicketNumbers: Array<any>\r\n  from?: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\r\n  const winNumbers = useWinningNumbers()\r\n  const TranslateString = useI18n()\r\n  const rewardMatch = useCallback(\r\n    (number) => {\r\n      let n = 0\r\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (winNumbers[i] == number[i]) n++\r\n      }\r\n      return n\r\n    },\r\n    [winNumbers],\r\n  )\r\n\r\n  const listItems = myTicketNumbers.map((number, index) => {\r\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\r\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\r\n      return (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <RewardP key={index}>\r\n          {emoji}\r\n          {number.toString()}\r\n          {emoji}\r\n        </RewardP>\r\n      )\r\n    }\r\n    // eslint-disable-next-line react/no-array-index-key\r\n    return <p key={index}>{number.toString()}</p>\r\n  })\r\n\r\n  return (\r\n    <Modal\r\n      title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`, { TICKETS: myTicketNumbers.length })}\r\n      onDismiss={onDismiss}\r\n    >\r\n      <TicketsList>\r\n        <h2>{listItems}</h2>\r\n      </TicketsList>\r\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\r\n        {TranslateString(438, 'Close')}\r\n      </StyledButton>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst RewardP = styled.div`\r\n  color: #ff8c28;\r\n`\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: center;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[2]}px;\r\n`\r\n\r\nexport default UserTicketsModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Won } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\r\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\r\nimport { useModal } from 'ui-kit/widgets/Modal'\r\nimport Loading from '../Loading'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst WinningsWrapper = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-bottom: 16px;\r\n\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[1]}px;\r\n`\r\n\r\nconst PrizesWonContent: React.FC = () => {\r\n  const [requestedClaim, setRequestedClaim] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const { claimLoading, claimAmount } = useTotalClaim()\r\n  const { onMultiClaim } = useMultiClaimLottery()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      setRequestedClaim(true)\r\n      const txHash = await onMultiClaim()\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedClaim(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiClaim, setRequestedClaim])\r\n\r\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\r\n\r\n  return (\r\n    <StyledCardContentInner>\r\n      <IconWrapper>\r\n        <Won />\r\n      </IconWrapper>\r\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\r\n        {TranslateString(660, 'You won!')}\r\n      </Heading>\r\n      {claimLoading && <Loading />}\r\n      {!claimLoading && (\r\n        <>\r\n          <WinningsWrapper>\r\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\r\n              {winnings}\r\n            </Heading>\r\n            <Heading as=\"h4\" size=\"lg\">\r\n              MEOWTH\r\n            </Heading>\r\n          </WinningsWrapper>\r\n        </>\r\n      )}\r\n      <StyledCardActions>\r\n        <Button fullWidth disabled={requestedClaim} onClick={handleClaim}>\r\n          {TranslateString(1056, 'Collect')}\r\n        </Button>\r\n      </StyledCardActions>\r\n      {/* <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n        {TranslateString(432, 'View your tickets')}\r\n      </StyledButton> */}\r\n    </StyledCardContentInner>\r\n  )\r\n}\r\n\r\nexport default PrizesWonContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useTickets from 'hooks/useTickets'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\nimport {useModal} from '../../../../ui-kit/widgets/Modal'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst TextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledText = styled(Text)`\r\n  padding-left: 12px;\r\n`\r\n\r\nconst Image = styled.img`\r\n  margin-right: 6px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    margin-right: 20px;\r\n  }\r\n`\r\nconst StyledButton = styled(Button)`\r\n  padding: 0 12px;\r\n  height: unset;\r\n`\r\n\r\nconst NoPrizesContent: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\r\n      <TextWrapper>\r\n        <StyledText color=\"textDisabled\">{TranslateString(726, 'Sorry, no prizes to collect')}</StyledText>\r\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n          {TranslateString(432, 'View your tickets')}\r\n        </StyledButton>\r\n      </TextWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default NoPrizesContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport PrizesWonContent from './PrizesWonContent'\r\nimport NoPrizesContent from './NoPrizesContent'\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${(props) =>\r\n    props.isDisabled\r\n      ? `  \r\n        margin-top: 16px;\r\n        background-color: unset;\r\n        box-shadow: unset;\r\n        border: 1px solid ${props.theme.colors.textDisabled};\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst YourPrizesCard: React.FC = () => {\r\n  const { claimAmount } = useTotalClaim()\r\n\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\r\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default YourPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport MeowthTicket from '../../../ui-kit/components/Svg/Icons/MeowthTicket'\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst UnlockWalletCard = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card isActive>\r\n      <StyledCardBody>\r\n        <IconWrapper>\r\n          <MeowthTicket />\r\n        </IconWrapper>\r\n        <StyledHeading size=\"md\">{TranslateString(1080, 'Unlock wallet to access lottery')}</StyledHeading>\r\n        <UnlockButton />\r\n      </StyledCardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UnlockWalletCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useLotteryAllowance } from 'hooks/useAllowance'\r\nimport useTickets from 'hooks/useTickets'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getMeowthAddress } from 'utils/addressHelpers'\r\nimport { useApproval } from 'hooks/useApproval'\r\nimport BuyTicketModal from './BuyTicketModal'\r\nimport MyTicketsModal from './UserTicketsModal'\r\nimport PurchaseWarningModal from './PurchaseWarningModal'\r\nimport { useModal } from '../../../../ui-kit/widgets/Modal'\r\n\r\nconst CardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    justify-content: space-between;\r\n  }\r\n`\r\n\r\nconst TicketCard: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  const allowance = useLotteryAllowance()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const cakeBalance = useTokenBalance(getMeowthAddress())\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\r\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"MEOWTH\" />)\r\n  const { handleApprove, requestedApproval } = useApproval(onPresentApprove)\r\n\r\n  const renderLotteryTicketButtons = () => {\r\n    if (!allowance.toNumber()) {\r\n      return (\r\n        <>\r\n          <Button fullWidth disabled>\r\n            {TranslateString(432, 'View your tickets')}\r\n          </Button>\r\n          <Button fullWidth disabled={requestedApproval} onClick={handleApprove}>\r\n            {TranslateString(494, 'Approve MEOWTH')}\r\n          </Button>\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        <Button\r\n          style={{ marginRight: '8px' }}\r\n          fullWidth\r\n          disabled={ticketsLength === 0}\r\n          variant=\"secondary\"\r\n          onClick={onPresentMyTickets}\r\n        >\r\n          {TranslateString(432, 'View your tickets')}\r\n        </Button>\r\n        <Button id=\"lottery-buy-start\" fullWidth onClick={onPresentBuy}>\r\n          {TranslateString(430, 'Buy ticket')}\r\n        </Button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <CardActions>\r\n      {lotteryHasDrawn ? (\r\n        <Button disabled> {TranslateString(874, 'On sale soon')}</Button>\r\n      ) : (\r\n        renderLotteryTicketButtons()\r\n      )}\r\n    </CardActions>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, TicketRound, Text, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport useTickets from 'hooks/useTickets'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport TicketActions from './TicketActions'\r\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\r\nimport MeowthTicket from '../../../../ui-kit/components/Svg/Icons/MeowthTicket'\r\n\r\ninterface CardProps {\r\n  isSecondCard?: boolean\r\n}\r\n\r\nconst StyledCard = styled(Card)<CardProps>`\r\n  ${(props) =>\r\n    props.isSecondCard\r\n      ? `  \r\n        margin-top: 16px;\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst CardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst TicketCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\r\n\r\n  return (\r\n    <StyledCard isSecondCard={isSecondCard}>\r\n      <CardBody>\r\n        <CardHeader>\r\n          <IconWrapper>\r\n            <MeowthTicket />\r\n          </IconWrapper>\r\n          {lotteryHasDrawn ? (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(870, 'Until ticket sale:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\r\n            </TicketCountWrapper>\r\n          ) : (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(724, 'Your tickets for this round')}\r\n              </Text>\r\n              <Heading size=\"lg\">{ticketsLength}</Heading>\r\n            </TicketCountWrapper>\r\n          )}\r\n        </CardHeader>\r\n        <TicketActions />\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface PrizeGridProps {\r\n  lotteryPrizeAmount?: number\r\n  pastDraw?: boolean\r\n  jackpotMatches?: number\r\n  oneTicketMatches?: number\r\n  twoTicketMatches?: number\r\n  threeTicketMatches?: number\r\n}\r\n\r\nconst Grid = styled.div<{ pastDraw?: boolean }>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n`\r\n\r\nconst RightAlignedText = styled(Text)`\r\n  text-align: right;\r\n`\r\n\r\nconst RightAlignedHeading = styled(Heading)`\r\n  text-align: right;\r\n`\r\n\r\nconst GridItem = styled.div<{ marginBottom?: string }>`\r\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\r\n`\r\n\r\nconst PastDrawGridItem = styled(GridItem)`\r\n  transform: translate(-40%, 0%);\r\n`\r\n\r\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\r\n  lotteryPrizeAmount = 0,\r\n  pastDraw = false,\r\n  jackpotMatches,\r\n  oneTicketMatches,\r\n  twoTicketMatches,\r\n  threeTicketMatches,\r\n}) => {\r\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\r\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\r\n  const oneMatchesAmount = +((lotteryPrizeAmount / 100) * 5).toFixed(0)\r\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Grid pastDraw={pastDraw}>\r\n      <GridItem>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(756, 'No. Matched')}\r\n        </Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n            {TranslateString(754, 'Winners')}\r\n          </RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(752, 'Prize Pot')}\r\n        </RightAlignedText>\r\n      </GridItem>\r\n      {/* 4 matches row */}\r\n      <GridItem>\r\n        <Heading size=\"md\">4</Heading>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\r\n      </GridItem>\r\n      {/* 3 matches row */}\r\n      <GridItem>\r\n        <Text bold>3</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* 2 matches row */}\r\n      <GridItem>\r\n        <Text>2</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* 1 matches row */}\r\n      {/* <GridItem marginBottom=\"20px\">\r\n        <Text>1</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem marginBottom=\"20px\">\r\n          <RightAlignedText>{oneTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem marginBottom=\"20px\">\r\n        <RightAlignedText>{oneMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem> */}\r\n      {/* Burn row */}\r\n      <GridItem marginBottom=\"0\">\r\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\r\n      </GridItem>\r\n      {pastDraw ? (\r\n        <>\r\n          <GridItem marginBottom=\"0\" />\r\n          <GridItem marginBottom=\"0\">\r\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n          </GridItem>\r\n        </>\r\n      ) : (\r\n        <GridItem marginBottom=\"0\">\r\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n        </GridItem>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PrizeGrid\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport {\r\n  Image,\r\n  Heading,\r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  Text,\r\n  PancakeRoundIcon,\r\n  Flex,\r\n  Skeleton,\r\n} from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useTotalRewards } from 'hooks/useTickets'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\r\nimport PrizeGrid from '../PrizeGrid'\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Right = styled.div`\r\n  display: flex;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Left = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst PrizeCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\r\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 100%;\r\n  }\r\n`\r\n\r\nconst StyledImage = styled(Image)`\r\n  align-self: center;\r\n`\r\n\r\nconst TotalPrizesCard = () => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWallet()\r\n  const [showFooter, setShowFooter] = useState(false)\r\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\r\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\r\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        {account && (\r\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\r\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\r\n            {currentLotteryNumber > 0 && (\r\n              <>\r\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>\r\n                  {TranslateString(720, `Round #${currentLotteryNumber}`, { num: currentLotteryNumber })}\r\n                </Text>\r\n              </>\r\n            )}\r\n          </Flex>\r\n        )}\r\n        <CardHeading>\r\n          <Left>\r\n            <IconWrapper>\r\n              <img src=\"images/meowth-coins.svg\" width={200} height={150} alt=\"meowth-coins\" />\r\n            </IconWrapper>\r\n            <PrizeCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(722, 'Total Pot:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} MEOWTH</Heading>\r\n            </PrizeCountWrapper>\r\n          </Left>\r\n          <Right>\r\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\r\n          </Right>\r\n        </CardHeading>\r\n      </CardBody>\r\n      <ExpandingWrapper showFooter={showFooter}>\r\n        <CardFooter>\r\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\r\n        </CardFooter>\r\n      </ExpandingWrapper>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TotalPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { Image, Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\n\r\nconst WinningNumbers: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const winNumbers = useWinningNumbers()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const MatchedNumber4 = useMatchingRewardLength(4)\r\n  const MatchedNumber3 = useMatchingRewardLength(3)\r\n  const MatchedNumber2 = useMatchingRewardLength(2)\r\n  const MatchedNumber1 = useMatchingRewardLength(1)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <Card>\r\n        <CardBody>\r\n          <StyledCardContentInner>\r\n            <StyledCardHeader>\r\n              <Title>\r\n                {account && lotteryHasDrawn\r\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\r\n                  : TranslateString(572, 'Latest Winning Numbers')}\r\n              </Title>\r\n              <br />\r\n            </StyledCardHeader>\r\n            <Row>\r\n              {winNumbers.map((number, index) => (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <TicketNumberBox key={index}>\r\n                  <CenteredText>{number}</CenteredText>\r\n                </TicketNumberBox>\r\n              ))}\r\n            </Row>\r\n            <RabbitRow>\r\n              <RabbitBox>\r\n                <CardImageFirst>\r\n                  <Image src=\"/images/signs-lottery-01.svg\" alt=\"Number 1\" width={200} height={150} responsive />\r\n                </CardImageFirst>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/signs-lottery-02.svg\" alt=\"Number 2\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/signs-lottery-03.svg\" alt=\"Number 3\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/signs-lottery-04.svg\" alt=\"Number 4\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n            </RabbitRow>\r\n            <RabbitRowSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImageFirst>\r\n                  <Image src=\"/images/signs-lottery-01.svg\" alt=\"Number 1\" width={200} height={150} responsive />\r\n                </CardImageFirst>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/signs-lottery-02.svg\" alt=\"Number 2\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/signs-lottery-03.svg\" alt=\"Number 3\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/signs-lottery-04.svg\" alt=\"Number 4\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n            </RabbitRowSmall>\r\n            <Column>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber4}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber3}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber2}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n            </Column>\r\n            <Link href=\"https://wynaut-api-git.vercel.app/api/lottery?page=0&pageSize=25\" target=\"_blank\">\r\n              {TranslateString(448, 'Export recent winning numbers')}\r\n            </Link>\r\n          </StyledCardContentInner>\r\n        </CardBody>\r\n      </Card>\r\n    </CardWrapper>\r\n  )\r\n}\r\nconst Link = styled.a`\r\n  margin-top: 1em;\r\n  text-decoration: none;\r\n  color: #25beca;\r\n`\r\n\r\nconst Row = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst RabbitRow = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst RabbitRowSmall = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst CardImage = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst CardImageFirst = styled.div`\r\n  text-align: center;\r\n  margin-left: -1.2em;\r\n\r\n  @media (max-width: 600) {\r\n    margin-left: -0.2em;\r\n  }\r\n`\r\n\r\nconst RowNoPadding = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst Column = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CenteredText = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n`\r\n\r\nconst CenteredTextWithPadding = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n`\r\n\r\nconst TicketNumberBox = styled.div`\r\n  padding: 10px;\r\n  border-radius: 12px;\r\n  background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\r\n  color: white;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n  margin: 10px;\r\n  margin-bottom: 7px;\r\n  width: 40px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 40px;\r\n    margin: 20px;\r\n    width: 60px;\r\n  }\r\n`\r\n\r\nconst RabbitBox = styled.div`\r\n  /* padding: 10px; */\r\n  border-radius: 12px;\r\n  margin: 16px 20px;\r\n  width: 60px;\r\n`\r\n\r\nconst RabbitBoxSmall = styled.div`\r\n  padding-top: 10px;\r\n  padding-left: 10px;\r\n  border-radius: 12px;\r\n  margin: 20px;\r\n  width: 20px;\r\n`\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CardWrapper = styled.div``\r\n\r\nconst Title = styled.div`\r\n  color: ${(props) => props.theme.colors.secondary};\r\n  font-size: 24px;\r\n  width: 50vw;\r\n  text-align: center;\r\n  font-weight: 1000;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default WinningNumbers\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Heading, Link, Image } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst LayoutWrapper = styled.div`\r\n  max-width: 500px;\r\n  margin: 0 auto 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst StyledImage = styled(Image)`\r\n  align-self: center;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-self: center;\r\n  margin-top: 16px;\r\n`\r\n\r\nconst HowItWorks = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <LayoutWrapper>\r\n      <StyledImage src=\"/images/meowth-coins.svg\" alt=\"Meowth with coins\" width={163} height={140} />\r\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\r\n        {TranslateString(632, 'How it works')}\r\n      </StyledHeading>\r\n      <Text fontSize=\"16px\">\r\n        {TranslateString(\r\n          999,\r\n          'Spend Meowth to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\r\n        )}\r\n      </Text>\r\n      {/* <StyledLink href=\"https://docs.pancakeswap.finance/lottery-1\">Read more</StyledLink> */}\r\n    </LayoutWrapper>\r\n  )\r\n}\r\n\r\nexport default HowItWorks\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport YourPrizesCard from './components/YourPrizesCard'\r\nimport UnlockWalletCard from './components/UnlockWalletCard'\r\nimport TicketCard from './components/TicketCard'\r\nimport TotalPrizesCard from './components/TotalPrizesCard'\r\nimport WinningNumbers from './components/WinningNumbers'\r\nimport HowItWorks from './components/HowItWorks'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\r\n`\r\n\r\nconst NextDrawPage: React.FC = () => {\r\n  const { account } = useWallet()\r\n  const { claimAmount } = useTotalClaim()\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <>\r\n      <Cards>\r\n        <div>\r\n          <TotalPrizesCard />\r\n        </div>\r\n        <SecondCardColumnWrapper isAWin={isAWin}>\r\n          {!account ? <UnlockWalletCard /> : <>{isAWin ? <YourPrizesCard /> : <TicketCard isSecondCard={isAWin} />}</>}\r\n        </SecondCardColumnWrapper>\r\n      </Cards>\r\n      <HowItWorks />\r\n      {/* legacy page content */}\r\n      <WinningNumbers />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NextDrawPage\r\n","export type DataResponse = {\r\n  lotteryNumber: number\r\n  lotteryDate: string\r\n  lotteryNumbers: number[]\r\n  poolSize: number\r\n  burned: number\r\n  contractLink: string\r\n  jackpotTicket: number\r\n  match1Ticket: number | null\r\n  match2Ticket: number\r\n  match3Ticket: number\r\n  match4Ticket: number\r\n  poolJackpot: number\r\n  poolMatch3: number\r\n  poolMatch2: number\r\n  poolMatch1: number | null\r\n\r\n  // TODO: Fill in the error type\r\n  error: any\r\n}\r\n\r\n/**\r\n * Get data for a specific lottery\r\n */\r\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\r\n  try {\r\n    const response = await fetch(`https://wynaut-api-git.vercel.app/api/singleLottery?lotteryNumber=${lotteryNumber}`)\r\n    const data = await response.json()\r\n\r\n    return data\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport default getLotteryRoundData\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Input, Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface PastLotterySearcherProps {\r\n  initialLotteryNumber: number\r\n  onSubmit: (num: number) => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst SearchWrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst ButtonWrapper = styled.div`\r\n  position: absolute;\r\n  right: 8px;\r\n  top: 50%;\r\n  transform: translate(0%, -50%);\r\n  width: auto;\r\n`\r\n\r\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\r\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\r\n  const [isError, setIsError] = useState(false)\r\n  const TranslateString = useI18n()\r\n\r\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault()\r\n    onSubmit(lotteryNumber)\r\n  }\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = parseInt(evt.currentTarget.value, 10)\r\n\r\n    // The max value will always be the initialLotterNumber which equals\r\n    // the latest lottery round\r\n    setIsError(value > initialLotteryNumber)\r\n    setLotteryNumber(value)\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text>{TranslateString(742, 'Select lottery number:')}</Text>\r\n      <form onSubmit={handleSubmit}>\r\n        <SearchWrapper>\r\n          <Input\r\n            value={lotteryNumber}\r\n            type=\"number\"\r\n            isWarning={isError}\r\n            max={initialLotteryNumber}\r\n            onChange={handleChange}\r\n          />\r\n          <ButtonWrapper>\r\n            <Button type=\"submit\" size=\"sm\" disabled={isError}>\r\n              {TranslateString(744, 'Search')}\r\n            </Button>\r\n          </ButtonWrapper>\r\n        </SearchWrapper>\r\n      </form>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotterySearcher\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface PastRoundCardErrorProps {\r\n  error: {\r\n    message: string\r\n  }\r\n}\r\n\r\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\r\n  return <Text p=\"24px\">{error.message}</Text>\r\n}\r\n\r\nexport default PastRoundCardError\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface HeadingProps {\r\n  valueToDisplay?: string\r\n  children?: string\r\n  Icon?: React.ComponentType\r\n}\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\r\n  return (\r\n    <Flex {...props}>\r\n      {Icon && (\r\n        <IconWrapper>\r\n          <Icon />\r\n        </IconWrapper>\r\n      )}\r\n      <Flex flexDirection=\"column\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {children}\r\n        </Text>\r\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nLotteryCardHeading.defaultProps = {\r\n  valueToDisplay: '',\r\n  Icon: () => <div />,\r\n  children: '',\r\n}\r\n\r\nexport default LotteryCardHeading\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, LinkExternal, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport useTickets from 'hooks/useTickets'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 24px;\r\n\r\n  & > div {\r\n    flex: 1;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst ExternalLinkWrap = styled(LinkExternal)`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 48px;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n  width: 100%;\r\n`\r\n\r\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets(lotteryNumber)\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const { account } = useWallet()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Wrapper>\r\n        <UnlockButton />\r\n      </Wrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} fullWidth>\r\n          {TranslateString(432, 'View your tickets')}\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <ExternalLinkWrap href={contractLink}>{TranslateString(356, 'View on BscScan')}</ExternalLinkWrap>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport LotteryCardHeading from '../LotteryCardHeading'\r\nimport PastLotteryActions from './PastLotteryActions'\r\nimport PrizeGrid from '../PrizeGrid'\r\nimport Timestamp from '../Timestamp'\r\nimport MeowthCoin from '../../../../ui-kit/components/Svg/Icons/MeowthToken'\r\nimport MeowthTicket from '../../../../ui-kit/components/Svg/Icons/MeowthTicket'\r\n\r\ninterface PastRoundCardDetailsProps {\r\n  data: DataResponse\r\n}\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\r\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const {\r\n    contractLink,\r\n    jackpotTicket,\r\n    lotteryDate,\r\n    lotteryNumber,\r\n    lotteryNumbers,\r\n    match1Ticket,\r\n    match2Ticket,\r\n    match3Ticket,\r\n    poolSize,\r\n  } = data\r\n\r\n  return (\r\n    !data.error &&\r\n    data && (\r\n      <>\r\n        <CardBody>\r\n          <CardHeading>\r\n            {/* <Timestamp timeValue={lotteryDate} /> */}\r\n            <Heading size=\"md\" mb=\"24px\">\r\n              Round #{lotteryNumber}\r\n            </Heading>\r\n            <TopLotteryCardHeading\r\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\r\n              Icon={MeowthTicket}\r\n            >\r\n              {TranslateString(999, 'Winning numbers')}\r\n            </TopLotteryCardHeading>\r\n            <LotteryCardHeading\r\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} MEOWTH`)}\r\n              Icon={MeowthCoin}\r\n            >\r\n              {TranslateString(999, 'Total prizes')}\r\n            </LotteryCardHeading>\r\n          </CardHeading>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <PrizeGrid\r\n            lotteryPrizeAmount={poolSize}\r\n            jackpotMatches={jackpotTicket}\r\n            oneTicketMatches={match1Ticket}\r\n            twoTicketMatches={match2Ticket}\r\n            threeTicketMatches={match3Ticket}\r\n            pastDraw\r\n          />\r\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\r\n        </CardFooter>\r\n      </>\r\n    )\r\n  )\r\n}\r\n\r\nexport default PastRoundCardDetails\r\n","import React from 'react'\r\nimport { Card } from '@pancakeswap-libs/uikit'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport PastRoundCardError from './PastRoundCardError'\r\nimport PastRoundCardDetails from './PastRoundCardDetails'\r\n\r\ninterface PastRoundCardProps {\r\n  error: {\r\n    message: string\r\n  }\r\n  data: DataResponse\r\n}\r\n\r\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\r\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\r\n}\r\n\r\nexport default PastRoundCard\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\r\n\r\ntype GetRecentLotteryRoundDataReturn = {\r\n  isLoading: boolean\r\n  data: DataResponse\r\n  mostRecentLotteryNumber: number\r\n  error: any\r\n}\r\n\r\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [data, setData] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  useEffect(() => {\r\n    const fetchRecentLotteryData = async () => {\r\n      try {\r\n        setIsLoading(true)\r\n\r\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\r\n        setData(roundData)\r\n      } catch (err) {\r\n        setError(err)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (mostRecentLotteryNumber > 0) {\r\n      fetchRecentLotteryData()\r\n    }\r\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\r\n\r\n  return { isLoading, data, mostRecentLotteryNumber, error }\r\n}\r\n\r\nexport default useGetRecentLotteryRoundData\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\r\nimport useI18n from 'hooks/useI18n'\r\nimport PastLotterySearcher from './PastLotterySearcher'\r\nimport PastRoundCard from './PastRoundCard'\r\nimport Loading from '../Loading'\r\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 552px; // height of final card\r\n`\r\n\r\nconst PastLotteryRoundViewer = () => {\r\n  const [state, setState] = useState({\r\n    roundData: null,\r\n    error: { message: null, type: null },\r\n    isInitialized: false,\r\n    isLoading: true,\r\n  })\r\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\r\n  const TranslateString = useI18n()\r\n  const { roundData, error, isInitialized, isLoading } = state\r\n\r\n  useEffect(() => {\r\n    if (initialLotteryData) {\r\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\r\n    }\r\n  }, [initialLotteryData, setState])\r\n\r\n  const handleSubmit = async (lotteryNumber: number) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      isLoading: true,\r\n    }))\r\n\r\n    getLotteryRoundData(lotteryNumber)\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: {\r\n              message: TranslateString(1076, 'The lottery number you provided does not exist'),\r\n              type: 'out of range',\r\n            },\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        } else {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: { message: null, type: null },\r\n            roundData: data,\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          error: { message: TranslateString(1078, 'Error fetching data'), type: 'api' },\r\n          isLoading: false,\r\n          isInitialized: true,\r\n        }))\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\r\n      {!isInitialized || isLoading ? (\r\n        <Card>\r\n          <StyledCardBody>\r\n            <Loading />\r\n          </StyledCardBody>\r\n        </Card>\r\n      ) : (\r\n        <PastRoundCard error={error} data={roundData} />\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotteryRoundViewer\r\n","import React, { lazy, Suspense, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport Loading from '../Loading'\r\n\r\nconst Line = lazy(() => import('./LineChartWrapper'))\r\n\r\nconst InnerWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst HistoryChart: React.FC = () => {\r\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\r\n  const getDataArray = (kind) => {\r\n    return historyData\r\n      .map((dataPoint) => {\r\n        return dataPoint[kind]\r\n      })\r\n      .reverse()\r\n  }\r\n\r\n  const lineStyles = ({ color }) => {\r\n    return {\r\n      borderColor: color,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      pointRadius: 0,\r\n      pointHitRadius: 10,\r\n    }\r\n  }\r\n\r\n  const chartData = {\r\n    labels: getDataArray('lotteryNumber'),\r\n    datasets: [\r\n      {\r\n        label: 'Pool Size',\r\n        data: getDataArray('poolSize'),\r\n        yAxisID: 'y-axis-pool',\r\n        ...lineStyles({ color: '#8F80BA' }),\r\n      },\r\n      {\r\n        label: 'Burned',\r\n        data: getDataArray('burned'),\r\n        yAxisID: 'y-axis-burned',\r\n        ...lineStyles({ color: '#1FC7D4' }),\r\n      },\r\n    ],\r\n  }\r\n\r\n  const axesStyles = ({ color, lineHeight }) => {\r\n    return {\r\n      borderCapStyle: 'round',\r\n      gridLines: { display: false },\r\n      ticks: {\r\n        fontFamily: 'Kanit, sans-serif',\r\n        fontColor: color,\r\n        fontSize: 14,\r\n        lineHeight,\r\n        maxRotation: 0,\r\n        beginAtZero: true,\r\n        autoSkipPadding: 15,\r\n        userCallback: (value) => {\r\n          return value.toLocaleString()\r\n        },\r\n      },\r\n    }\r\n  }\r\n\r\n  const options = {\r\n    legend: { display: false },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left',\r\n          id: 'y-axis-pool',\r\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\r\n        },\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'right',\r\n          id: 'y-axis-burned',\r\n          ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          ...axesStyles({ color: '#452A7A', lineHeight: 1 }),\r\n        },\r\n      ],\r\n    },\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {historyError && (\r\n        <InnerWrapper>\r\n          <Text>Error fetching data</Text>\r\n        </InnerWrapper>\r\n      )}\r\n      {!historyError && historyData.length > 1 ? (\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Line data={chartData} options={options} type=\"line\" />\r\n        </Suspense>\r\n      ) : (\r\n        <InnerWrapper>\r\n          <Loading />\r\n        </InnerWrapper>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HistoryChart\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  margin: 36px 0 28px;\r\n`\r\n\r\nconst LegendItem = styled.div`\r\n  display: flex;\r\n  margin-right: 18px;\r\n  align-items: center;\r\n`\r\n\r\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 10px;\r\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\r\n  margin-right: 6px;\r\n`\r\n\r\nconst Legend = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <LegendItem>\r\n        <Circle isPoolSize />\r\n        <Text>{TranslateString(748, 'Pool Size')}</Text>\r\n      </LegendItem>\r\n      <LegendItem>\r\n        <Circle />\r\n        <Text>{TranslateString(750, 'Burned')}</Text>\r\n      </LegendItem>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Legend\r\n","import React from 'react'\r\nimport { Heading, Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport HistoryChart from './HistoryChart'\r\nimport Legend from './Legend'\r\n\r\nconst PastDrawsHistoryCard: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <Heading size=\"md\">{TranslateString(746, 'History')}</Heading>\r\n        <Legend />\r\n        <HistoryChart />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PastDrawsHistoryCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\r\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst BunnyImageWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 32px;\r\n  justify-content: center;\r\n`\r\n\r\nconst PastDrawsPage: React.FC = () => {\r\n  return (\r\n    <Cards>\r\n      <PastLotteryRoundViewer />\r\n      <SecondCardColumnWrapper>\r\n        <PastDrawsHistoryCard />\r\n        <BunnyImageWrapper>\r\n          <img src=\"/images/meowth-coins.svg\" alt=\"lottery meowth\" />\r\n        </BunnyImageWrapper>\r\n      </SecondCardColumnWrapper>\r\n    </Cards>\r\n  )\r\n}\r\n\r\nexport default PastDrawsPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport Page from 'components/layout/Page'\r\nimport Hero from './components/Hero'\r\nimport Divider from './components/Divider'\r\nimport NextDrawPage from './NextDrawPage'\r\nimport PastDrawsPage from './PastDrawsPage'\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst Lottery: React.FC = () => {\r\n  const lotteryContract = useLottery()\r\n  const { account } = useWallet()\r\n  const TranslateString = useI18n()\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [historyData, setHistoryData] = useState([])\r\n  const [historyError, setHistoryError] = useState(false)\r\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\r\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\r\n\r\n  useEffect(() => {\r\n    fetch(`https://wynaut-api-git.vercel.app/api/lotteryHistory`)\r\n      .then((response) => response.json())\r\n      .then((data) => setHistoryData(data))\r\n      .catch(() => {\r\n        setHistoryError(true)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const getInitialLotteryIndex = async () => {\r\n      const index = await getLotteryIssueIndex(lotteryContract)\r\n      const previousLotteryNumber = index - 1\r\n\r\n      setCurrentLotteryNumber(index)\r\n      setMostRecentLotteryNumber(previousLotteryNumber)\r\n    }\r\n\r\n    if (account && lotteryContract) {\r\n      getInitialLotteryIndex()\r\n    }\r\n  }, [account, lotteryContract])\r\n\r\n  const handleClick = (index) => {\r\n    setActiveIndex(index)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Page>\r\n        <Wrapper>\r\n          <ButtonMenu activeIndex={activeIndex} onClick={handleClick} size=\"sm\" variant=\"subtle\">\r\n            <ButtonMenuItem>{TranslateString(716, 'Next draw')}</ButtonMenuItem>\r\n            <ButtonMenuItem>{TranslateString(718, 'Past draws')}</ButtonMenuItem>\r\n          </ButtonMenu>\r\n        </Wrapper>\r\n        <Divider />\r\n        <PastLotteryDataContext.Provider\r\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\r\n        >\r\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\r\n        </PastLotteryDataContext.Provider>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lottery\r\n"],"sourceRoot":""}