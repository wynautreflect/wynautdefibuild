{"version":3,"sources":["components/ExpandableSectionButton/ExpandableSectionButton.tsx","contexts/PastLotteryDataContext.tsx","hooks/useTimer.ts","utils/getTimePeriods.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["Wrapper","styled","div","theme","colors","primary","ExpandableSectionButton","onClick","expanded","aria-label","role","color","bold","defaultProps","React","createContext","mostRecentLotteryNumber","historyError","historyData","useCurrentTime","useState","Date","getTime","currentMillis","setCurrentMillis","useEffect","timerID","setInterval","prevMillis","clearInterval","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","lotteryDrawHoursUtc","getClosestLotteryHour","currentHour","isNextLottoTomorrow","getUTCHours","getNextLotteryDrawTime","millisTimeOfNextDraw","date","nextLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","parseInt","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getLotteryDrawStep","msBetweenLotteries","ProgressWrapper","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","isDark","secondary","LotteryProgress","TranslateString","useI18n","useGetLotteryHasDrawn","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","fontSize","style","marginTop","Title","Heading","attrs","as","size","Blurb","StyledHero","tertiary","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","textSubtle","StyledLoading","Loading","RewardP","TicketsList","props","StyledButton","Button","spacing","UserTicketsModal","myTicketNumbers","onDismiss","from","winNumbers","useWinningNumbers","rewardMatch","useCallback","number","n","i","length","listItems","map","index","emoji","Array","join","toString","title","TICKETS","variant","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","useTotalClaim","claimLoading","claimAmount","onMultiClaim","useMultiClaimLottery","tickets","useTickets","useModal","handleClaim","a","console","error","winnings","getBalanceNumber","toFixed","marginRight","fullWidth","disabled","TextWrapper","StyledText","Image","img","md","NoPrizesContent","onPresentMyTickets","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","MeowthTicket","UnlockButton","CardActions","TicketCard","allowance","useLotteryAllowance","lotteryHasDrawn","cakeBalance","useTokenBalance","getMeowthAddress","ticketsLength","PurchaseWarningModal","onPresentApprove","BuyTicketModal","max","tokenName","onPresentBuy","useApproval","handleApprove","requestedApproval","toNumber","id","isSecondCard","CardHeader","TicketCountWrapper","timeUntilTicketSale","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","oneTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","toLocaleString","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","account","useWallet","setShowFooter","useTotalRewards","lotteryPrizeWithCommaSeparators","currentLotteryNumber","useContext","PastLotteryDataContext","mb","alignItems","justifyContent","height","width","fontWeight","num","Link","Row","RabbitRow","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","WinningNumbers","MatchedNumber3","useMatchingRewardLength","MatchedNumber2","MatchedNumber1","responsive","marginLeft","href","target","LayoutWrapper","StyledImage","HowItWorks","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","lotteryNumber","fetch","response","json","data","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","value","type","isWarning","onChange","currentTarget","PastRoundCardError","p","message","LotteryCardHeading","valueToDisplay","children","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryDate","lotteryNumbers","match1Ticket","match2Ticket","match3Ticket","poolSize","MeowthCoin","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","PastLotteryRoundViewer","isInitialized","state","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","options","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Lottery","lotteryContract","useLottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","getLotteryIssueIndex","previousLotteryNumber","getInitialLotteryIndex","Page","Divider","Provider"],"mappings":"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","file":"static/js/10.77fcca67.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? 'Hide' : 'Details'}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","import { useState, useEffect } from 'react'\n\nexport const useCurrentTime = () => {\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\n\n  useEffect(() => {\n    const tick = () => {\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\n    }\n\n    const timerID = setInterval(() => tick(), 1000)\n\n    return () => clearInterval(timerID)\n  }, [])\n\n  return currentMillis\n}\n\nexport default useCurrentTime\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import getTimePeriods from 'utils/getTimePeriods'\r\n\r\n// lottery draws UTC: 07:00, 15:00\r\nconst lotteryDrawHoursUtc = [7, 15]\r\n\r\nconst getClosestLotteryHour = (currentHour) => {\r\n  switch (true) {\r\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[0]\r\n    case currentHour < lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[1]\r\n    default:\r\n      return 0\r\n  }\r\n}\r\n\r\nconst isNextLottoTomorrow = () =>{\r\n  const date = new Date();\r\n  const currentHour = date.getUTCHours();\r\n  const nextLotteryHour = getClosestLotteryHour(currentHour);\r\n\r\n   // next lottery is tomorrow if the next lottery is at 7am UTC...\r\n  // ...and current time is between 02:00am & 23:59pm UTC\r\n  return nextLotteryHour === lotteryDrawHoursUtc[0] && currentHour >= 2 && currentHour <= 23;\r\n}\r\n\r\nconst getNextLotteryDrawTime = (currentMillis) => {\r\n  \r\n  const date = new Date(currentMillis)\r\n  const currentHour = date.getUTCHours()\r\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\r\n  const nextLotteryIsTomorrow = isNextLottoTomorrow();\r\n  \r\n  let millisTimeOfNextDraw\r\n  if (nextLotteryIsTomorrow) {\r\n    const tomorrow = new Date(currentMillis)\r\n    const nextDay = tomorrow.getUTCDate() + 1\r\n    tomorrow.setUTCDate(nextDay)\r\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  } else {\r\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  }\r\n\r\n  return millisTimeOfNextDraw\r\n}\r\n\r\n// @ts-ignore\r\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\r\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\r\n\r\nexport const getTicketSaleTime = (currentMillis): string => {\r\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\r\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getLotteryDrawTime = (currentMillis): string => {\r\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getTicketSaleStep = () => (1 / 12) * 100\r\n\r\nexport const getLotteryDrawStep = (currentMillis) => {\r\n  // TODO: Make logic more flexible\r\n  // if true we wait 17 hours, if false we're only waiting 8 hours\r\n  const msBetweenLotteries = isNextLottoTomorrow() ? 6120000000 : 2880000000\r\n  const endTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = endTime - currentMillis\r\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\r\n  return 100 - percentageRemaining\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Progress } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport {\r\n  getLotteryDrawTime,\r\n  getLotteryDrawStep,\r\n  getTicketSaleTime,\r\n  getTicketSaleStep,\r\n} from '../helpers/CountdownHelpers'\r\n\r\nconst ProgressWrapper = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`\r\n\r\nconst TopTextWrapper = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst BottomTextWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledPrimaryText = styled(Text)`\r\n  color: ${({ theme }) => (theme.isDark ? theme.colors.secondary : '#202224')};\r\n  margin-right: 4px;\r\n`\r\nconst LotteryProgress = () => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\r\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\r\n \r\n  return (\r\n    <ProgressWrapper>\r\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={100} />\r\n      <TopTextWrapper>\r\n        <StyledPrimaryText fontSize=\"20px\" bold>\r\n         {/* {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw} */}\r\n         {TranslateString(0, '2 Meowth Lotteries per day!')}\r\n         {/* <br/ > */}\r\n         {/* {TranslateString(0, 'Winning tickets are drawn at:')}\r\n         <br/ >\r\n         {TranslateString(0, '0700 UTC and 1500 UTC')} */}\r\n        </StyledPrimaryText>\r\n        <Text fontSize=\"20px\" bold color=\"contrast\">\r\n        {/*  {lotteryHasDrawn ? TranslateString(0, 'Until ticket sale') : TranslateString(0, 'Until lottery draw')} */}\r\n        </Text>\r\n      </TopTextWrapper>\r\n      {/* {!lotteryHasDrawn && ( */}\r\n        <BottomTextWrapper style={{marginTop: 15}}>\r\n          <Text color=\"highlight\" bold style={{fontSize: 20}}>\r\n          {/* {TranslateString(0, 'Winning ticket is drawn 6 hours after sale starts')} */}\r\n          {timeUntilLotteryDraw} {TranslateString(0, 'until lottery draw ✨')}\r\n          </Text>\r\n        </BottomTextWrapper>\r\n      {/* )} */}\r\n    </ProgressWrapper>\r\n  )\r\n}\r\n\r\nexport default LotteryProgress\r\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Container from 'components/layout/Container'\nimport LotteryProgress from './LotteryProgress'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => (theme.isDark ? theme.colors.primary : 'white')};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: ${({ theme }) => (theme.isDark ? theme.colors.secondary : '#202224')};\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-color: ${({ theme }) => theme.colors.tertiary};\n  padding-bottom: 40px;\n  padding-top: 40px;\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n  }\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title>{TranslateString(708, 'The MEOWTH Lottery')}</Title>\n          <Blurb>{TranslateString(710, 'Buy tickets with MEOWTH')}</Blurb>\n          <Blurb>{TranslateString(712, 'Win if 2, 3 or 4 of your ticket numbers match!')}</Blurb>\n        </LeftWrapper>\n        <RightWrapper>\n          <LotteryProgress />\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const TranslateString = useI18n()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal\n      title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`, { TICKETS: myTicketNumbers.length })}\n      onDismiss={onDismiss}\n    >\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {TranslateString(438, 'Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport { useModal } from 'ui-kit/widgets/Modal'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\nconst PrizesWonContent: React.FC = () => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\n        {TranslateString(660, 'You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\">\n              MEOWTH\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button fullWidth disabled={requestedClaim} onClick={handleClaim}>\n          {TranslateString(1056, 'Collect')}\n        </Button>\n      </StyledCardActions>\n      {/* <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {TranslateString(432, 'View your tickets')}\n      </StyledButton> */}\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\nimport {useModal} from '../../../../ui-kit/widgets/Modal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const TranslateString = useI18n()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText color=\"textDisabled\">{TranslateString(726, 'Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {TranslateString(432, 'View your tickets')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 16px;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst YourPrizesCard: React.FC = () => {\n  const { claimAmount } = useTotalClaim()\n\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\nimport MeowthTicket from '../../../ui-kit/components/Svg/Icons/MeowthTicket'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <MeowthTicket />\n        </IconWrapper>\n        <StyledHeading size=\"md\">{TranslateString(1080, 'Unlock wallet to access lottery')}</StyledHeading>\n        <UnlockButton />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useLotteryAllowance } from 'hooks/useAllowance'\nimport useTickets from 'hooks/useTickets'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getMeowthAddress } from 'utils/addressHelpers'\nimport { useApproval } from 'hooks/useApproval'\nimport BuyTicketModal from './BuyTicketModal'\nimport MyTicketsModal from './UserTicketsModal'\nimport PurchaseWarningModal from './PurchaseWarningModal'\nimport { useModal } from '../../../../ui-kit/widgets/Modal'\n\nconst CardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    justify-content: space-between;\n  }\n`\n\nconst TicketCard: React.FC = () => {\n  const TranslateString = useI18n()\n  const allowance = useLotteryAllowance()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const cakeBalance = useTokenBalance(getMeowthAddress())\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"MEOWTH\" />)\n  const { handleApprove, requestedApproval } = useApproval(onPresentApprove)\n\n  const renderLotteryTicketButtons = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <>\n          <Button fullWidth disabled>\n            {TranslateString(432, 'View your tickets')}\n          </Button>\n          <Button fullWidth disabled={requestedApproval} onClick={handleApprove}>\n            {TranslateString(494, 'Approve MEOWTH')}\n          </Button>\n        </>\n      )\n    }\n    return (\n      <>\n        <Button\n          style={{ marginRight: '8px' }}\n          fullWidth\n          disabled={ticketsLength === 0}\n          variant=\"secondary\"\n          onClick={onPresentMyTickets}\n        >\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n        <Button id=\"lottery-buy-start\" fullWidth onClick={onPresentBuy}>\n          {TranslateString(430, 'Buy ticket')}\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <CardActions>\n      {lotteryHasDrawn ? (\n        <Button disabled> {TranslateString(874, 'On sale soon')}</Button>\n      ) : (\n        renderLotteryTicketButtons()\n      )}\n    </CardActions>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, TicketRound, Text, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTickets from 'hooks/useTickets'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport TicketActions from './TicketActions'\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\nimport MeowthTicket from '../../../../ui-kit/components/Svg/Icons/MeowthTicket'\n\ninterface CardProps {\n  isSecondCard?: boolean\n}\n\nconst StyledCard = styled(Card)<CardProps>`\n  ${(props) =>\n    props.isSecondCard\n      ? `  \n        margin-top: 16px;\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst CardHeader = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst TicketCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\n\n  return (\n    <StyledCard isSecondCard={isSecondCard}>\n      <CardBody>\n        <CardHeader>\n          <IconWrapper>\n            <MeowthTicket />\n          </IconWrapper>\n          {lotteryHasDrawn ? (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(870, 'Until ticket sale:')}\n              </Text>\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\n            </TicketCountWrapper>\n          ) : (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(724, 'Your tickets for this round')}\n              </Text>\n              <Heading size=\"lg\">{ticketsLength}</Heading>\n            </TicketCountWrapper>\n          )}\n        </CardHeader>\n        <TicketActions />\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  oneTicketMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  oneTicketMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const oneMatchesAmount = +((lotteryPrizeAmount / 100) * 5).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const TranslateString = useI18n()\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(756, 'No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {TranslateString(754, 'Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(752, 'Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading size=\"md\">4</Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem>\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* 1 matches row */}\n      {/* <GridItem marginBottom=\"20px\">\n        <Text>1</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem marginBottom=\"20px\">\n          <RightAlignedText>{oneTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem marginBottom=\"20px\">\n        <RightAlignedText>{oneMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem> */}\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport {\n  Image,\n  Heading,\n  Card,\n  CardBody,\n  CardFooter,\n  Text,\n  PancakeRoundIcon,\n  Flex,\n  Skeleton,\n} from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useTotalRewards } from 'hooks/useTickets'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\nimport PrizeGrid from '../PrizeGrid'\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Right = styled.div`\n  display: flex;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst Left = styled.div`\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst PrizeCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 100%;\n  }\n`\n\nconst StyledImage = styled(Image)`\n  align-self: center;\n`\n\nconst TotalPrizesCard = () => {\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const [showFooter, setShowFooter] = useState(false)\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  return (\n    <Card>\n      <CardBody>\n        {account && (\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\n            {currentLotteryNumber > 0 && (\n              <>\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>\n                  {TranslateString(720, `Round #${currentLotteryNumber}`, { num: currentLotteryNumber })}\n                </Text>\n              </>\n            )}\n          </Flex>\n        )}\n        <CardHeading>\n          <Left>\n            <IconWrapper>\n              <img src=\"images/meowth-coins.svg\" width={200} height={150} alt=\"meowth-coins\" />\n            </IconWrapper>\n            <PrizeCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(722, 'Total Pot:')}\n              </Text>\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} MEOWTH</Heading>\n            </PrizeCountWrapper>\n          </Left>\n          <Right>\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\n          </Right>\n        </CardHeading>\n      </CardBody>\n      <ExpandingWrapper showFooter={showFooter}>\n        <CardFooter>\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\n        </CardFooter>\n      </ExpandingWrapper>\n    </Card>\n  )\n}\n\nexport default TotalPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Image, Card, CardBody } from '@pancakeswap-libs/uikit'\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\n\nconst WinningNumbers: React.FC = () => {\n  const { account } = useWallet()\n  const winNumbers = useWinningNumbers()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  // const MatchedNumber4 = useMatchingRewardLength(4)\n  const MatchedNumber3 = useMatchingRewardLength(3)\n  const MatchedNumber2 = useMatchingRewardLength(2)\n  const MatchedNumber1 = useMatchingRewardLength(1)\n  const TranslateString = useI18n()\n\n  return (\n    <CardWrapper>\n      <Card>\n        <CardBody>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <Title>\n                {account && lotteryHasDrawn\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\n                  : TranslateString(572, 'Latest Winning Numbers')}\n              </Title>\n              <br />\n            </StyledCardHeader>\n            <Row>\n              {winNumbers.map((number, index) => (\n                // eslint-disable-next-line react/no-array-index-key\n                <TicketNumberBox key={index}>\n                  <CenteredText>{number}</CenteredText>\n                </TicketNumberBox>\n              ))}\n            </Row>\n            <RabbitRow>\n              <RabbitBox>\n                <CardImageFirst>\n                  <Image src=\"/images/signs-lottery-01.svg\" alt=\"Number 1\" width={200} height={150} responsive />\n                </CardImageFirst>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/signs-lottery-02.svg\" alt=\"Number 2\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/signs-lottery-03.svg\" alt=\"Number 3\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/signs-lottery-04.svg\" alt=\"Number 4\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n            </RabbitRow>\n            <RabbitRowSmall>\n              <RabbitBoxSmall>\n                <CardImageFirst>\n                  <Image src=\"/images/signs-lottery-01.svg\" alt=\"Number 1\" width={200} height={150} responsive />\n                </CardImageFirst>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/signs-lottery-02.svg\" alt=\"Number 2\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/signs-lottery-03.svg\" alt=\"Number 3\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/signs-lottery-04.svg\" alt=\"Number 4\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n            </RabbitRowSmall>\n            <Column>\n              {/* <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber4}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding> */}\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber3}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber2}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 1 number:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber1}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n            </Column>\n            <Link href=\"https://wynaut-api-git.vercel.app/api/lottery?page=0&pageSize=25\" target=\"_blank\">\n              {TranslateString(448, 'Export recent winning numbers')}\n            </Link>\n          </StyledCardContentInner>\n        </CardBody>\n      </Card>\n    </CardWrapper>\n  )\n}\nconst Link = styled.a`\n  margin-top: 1em;\n  text-decoration: none;\n  color: #25beca;\n`\n\nconst Row = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst RabbitRow = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst RabbitRowSmall = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\n\nconst CardImage = styled.div`\n  text-align: center;\n`\n\nconst CardImageFirst = styled.div`\n  text-align: center;\n  margin-left: -1.2em;\n\n  @media (max-width: 600) {\n    margin-left: -0.2em;\n  }\n`\n\nconst RowNoPadding = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst Column = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CenteredText = styled.div`\n  text-align: center;\n  align-items: center;\n`\n\nconst CenteredTextWithPadding = styled.div`\n  text-align: center;\n  align-items: center;\n  padding-left: 2px;\n  padding-right: 2px;\n`\n\nconst TicketNumberBox = styled.div`\n  padding: 10px;\n  border-radius: 12px;\n  background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\n  color: white;\n  font-size: 20px;\n  font-weight: 900;\n  margin: 10px;\n  margin-bottom: 7px;\n  width: 40px;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    margin: 20px;\n    width: 60px;\n  }\n`\n\nconst RabbitBox = styled.div`\n  /* padding: 10px; */\n  border-radius: 12px;\n  margin: 16px 20px;\n  width: 60px;\n`\n\nconst RabbitBoxSmall = styled.div`\n  padding-top: 10px;\n  padding-left: 10px;\n  border-radius: 12px;\n  margin: 20px;\n  width: 20px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CardWrapper = styled.div``\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.secondary};\n  font-size: 24px;\n  width: 50vw;\n  text-align: center;\n  font-weight: 1000;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport default WinningNumbers\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Link, Image } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst LayoutWrapper = styled.div`\n  max-width: 500px;\n  margin: 0 auto 40px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst StyledImage = styled(Image)`\n  align-self: center;\n`\n\nconst StyledLink = styled(Link)`\n  align-self: center;\n  margin-top: 16px;\n`\n\nconst HowItWorks = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <LayoutWrapper>\n      <StyledImage src=\"/images/meowth-coins.svg\" alt=\"Meowth with coins\" width={163} height={140} />\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\n        {TranslateString(632, 'How it works')}\n      </StyledHeading>\n      <Text fontSize=\"16px\">\n        {TranslateString(\n          999,\n          'Spend Meowth to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\n        )}\n      </Text>\n      {/* <StyledLink href=\"https://docs.pancakeswap.finance/lottery-1\">Read more</StyledLink> */}\n    </LayoutWrapper>\n  )\n}\n\nexport default HowItWorks\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport YourPrizesCard from './components/YourPrizesCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\nimport TicketCard from './components/TicketCard'\nimport TotalPrizesCard from './components/TotalPrizesCard'\nimport WinningNumbers from './components/WinningNumbers'\nimport HowItWorks from './components/HowItWorks'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\n`\n\nconst NextDrawPage: React.FC = () => {\n  const { account } = useWallet()\n  const { claimAmount } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <>\n      <Cards>\n        <div>\n          <TotalPrizesCard />\n        </div>\n        <SecondCardColumnWrapper isAWin={isAWin}>\n          {!account ? <UnlockWalletCard /> : <>{isAWin ? <YourPrizesCard /> : <TicketCard isSecondCard={isAWin} />}</>}\n        </SecondCardColumnWrapper>\n      </Cards>\n      <HowItWorks />\n      {/* legacy page content */}\n      <WinningNumbers />\n    </>\n  )\n}\n\nexport default NextDrawPage\n","export type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match1Ticket: number | null\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n  poolMatch1: number | null\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\n  try {\n    const response = await fetch(`https://wynaut-api-git.vercel.app/api/singleLottery?lotteryNumber=${lotteryNumber}`)\n    const data = await response.json()\n\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const TranslateString = useI18n()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(evt.currentTarget.value, 10)\n\n    // The max value will always be the initialLotterNumber which equals\n    // the latest lottery round\n    setIsError(value > initialLotteryNumber)\n    setLotteryNumber(value)\n  }\n\n  return (\n    <Wrapper>\n      <Text>{TranslateString(742, 'Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <Input\n            value={lotteryNumber}\n            type=\"number\"\n            isWarning={isError}\n            max={initialLotteryNumber}\n            onChange={handleChange}\n          />\n          <ButtonWrapper>\n            <Button type=\"submit\" size=\"sm\" disabled={isError}>\n              {TranslateString(744, 'Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@pancakeswap-libs/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const TranslateString = useI18n()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account } = useWallet()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <div>\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} fullWidth>\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n      </div>\n      <div>\n        <ExternalLinkWrap href={contractLink}>{TranslateString(356, 'View on BscScan')}</ExternalLinkWrap>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\nimport MeowthCoin from '../../../../ui-kit/components/Svg/Icons/MeowthToken'\nimport MeowthTicket from '../../../../ui-kit/components/Svg/Icons/MeowthTicket'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const TranslateString = useI18n()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match1Ticket,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            {/* <Timestamp timeValue={lotteryDate} /> */}\n            <Heading size=\"md\" mb=\"24px\">\n              Round #{lotteryNumber}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              Icon={MeowthTicket}\n            >\n              {TranslateString(999, 'Winning numbers')}\n            </TopLotteryCardHeading>\n            <LotteryCardHeading\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} MEOWTH`)}\n              Icon={MeowthCoin}\n            >\n              {TranslateString(999, 'Total prizes')}\n            </LotteryCardHeading>\n          </CardHeading>\n        </CardBody>\n        <CardFooter>\n          <PrizeGrid\n            lotteryPrizeAmount={poolSize}\n            jackpotMatches={jackpotTicket}\n            oneTicketMatches={match1Ticket}\n            twoTicketMatches={match2Ticket}\n            threeTicketMatches={match3Ticket}\n            pastDraw\n          />\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n        </CardFooter>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport { Card } from '@pancakeswap-libs/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\n}\n\nexport default PastRoundCard\n","import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (mostRecentLotteryNumber > 0) {\n      fetchRecentLotteryData()\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport useI18n from 'hooks/useI18n'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const TranslateString = useI18n()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: TranslateString(1076, 'The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: TranslateString(1078, 'Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst HistoryChart: React.FC = () => {\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    return historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = {\n    labels: getDataArray('lotteryNumber'),\n    datasets: [\n      {\n        label: 'Pool Size',\n        data: getDataArray('poolSize'),\n        yAxisID: 'y-axis-pool',\n        ...lineStyles({ color: '#8F80BA' }),\n      },\n      {\n        label: 'Burned',\n        data: getDataArray('burned'),\n        yAxisID: 'y-axis-burned',\n        ...lineStyles({ color: '#1FC7D4' }),\n      },\n    ],\n  }\n\n  const axesStyles = ({ color, lineHeight }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Kanit, sans-serif',\n        fontColor: color,\n        fontSize: 14,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return value.toLocaleString()\n        },\n      },\n    }\n  }\n\n  const options = {\n    legend: { display: false },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-pool',\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-burned',\n          ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\n        },\n      ],\n      xAxes: [\n        {\n          ...axesStyles({ color: '#452A7A', lineHeight: 1 }),\n        },\n      ],\n    },\n  }\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>Error fetching data</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 1 ? (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Line data={chartData} options={options} type=\"line\" />\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 36px 0 28px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{TranslateString(748, 'Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{TranslateString(750, 'Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React from 'react'\nimport { Heading, Card, CardBody } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <CardBody>\n        <Heading size=\"md\">{TranslateString(746, 'History')}</Heading>\n        <Legend />\n        <HistoryChart />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PastDrawsHistoryCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\nconst BunnyImageWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n  justify-content: center;\n`\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <Cards>\n      <PastLotteryRoundViewer />\n      <SecondCardColumnWrapper>\n        <PastDrawsHistoryCard />\n        <BunnyImageWrapper>\n          <img src=\"/images/meowth-coins.svg\" alt=\"lottery meowth\" />\n        </BunnyImageWrapper>\n      </SecondCardColumnWrapper>\n    </Cards>\n  )\n}\n\nexport default PastDrawsPage\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport useI18n from 'hooks/useI18n'\nimport { useLottery } from 'hooks/useContract'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport Divider from './components/Divider'\nimport NextDrawPage from './NextDrawPage'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useLottery()\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://wynaut-api-git.vercel.app/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (account && lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [account, lotteryContract])\n\n  const handleClick = (index) => {\n    setActiveIndex(index)\n  }\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        <Wrapper>\n          <ButtonMenu activeIndex={activeIndex} onClick={handleClick} size=\"sm\" variant=\"subtle\">\n            <ButtonMenuItem>{TranslateString(716, 'Next draw')}</ButtonMenuItem>\n            <ButtonMenuItem>{TranslateString(718, 'Past draws')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Wrapper>\n        <Divider />\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\n        </PastLotteryDataContext.Provider>\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n"],"sourceRoot":""}